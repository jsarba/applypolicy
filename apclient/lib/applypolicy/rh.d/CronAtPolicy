#!/bin/ksh
# Apply Policy Copyright (C) 2006 Shellcode.com.ar

CronAtPolicy_CronAllow_RH()
{
# I'm here!
  if [ ${TESTFLAG} = 1 ] ; then
    return
  fi
  DENUSERS=$1
  if [ ! -f "${CRONALLOW}" ] ; then
     APLog "${CRONALLOW} does not exist. FAILED"
     return
  fi
  DENUSERS="$(echo "${DENUSERS}" | ${SED} 's/\"//g')"
  IFS=','; for i in ${DENUSERS}; do
    if [ -z $(${GREP} -e "^\<${i}\>" "${CRONALLOW}") ]; then
       APLog "The user ${i} should be allowed to use cron and it is not."
       WASFIXED=1
       if [ ${FIXATE} = 1 ] ; then
          APBackup "${CRONALLOW}"
          echo ${i} >> "${CRONALLOW}"
          APLog "FIXED"
       fi
    fi
  done
  if [  -z "$WASFIXED" ]; then
     if [ ${LOG_OK} = 1 ] ; then
           APLog "OK"
     fi
  fi
  
}


CronAtPolicy_CronDeny_RH()
{
# I'm here!
  DENUSERS=$1
  if [ ${TESTFLAG} = 1 ] ; then
    return
  fi
  if [ ! -f "${CRONDENY}" ] ; then
     APLog "${CRONDENY:-NONEXISTENT} does not exist. FAILED"
     return
  fi
  DENUSERS="$(echo "${DENUSERS}" | ${SED} 's/\"//g')"
  IFS=','; for i in ${DENUSERS}; do
    if [ -z $(${GREP} -e "^\<${i}\>" "${CRONDENY}") ]; then
       APLog "The user ${i} should not be allowed to use cron and it is."
       WASFIXED=1
       if [ ${FIXATE} = 1 ] ; then
          APBackup "${CRONDENY}"
          echo ${i} >> "${CRONDENY}"
          APLog "FIXED"
       fi
    fi
  done
  if [  -z "$WASFIXED" ]; then
     if [ ${LOG_OK} = 1 ] ; then
        APLog "OK"
     fi
  fi
  IFS=""
}


CronAtPolicy_AtAllow_RH()
{
# I'm here!
  if [ ${TESTFLAG} = 1 ] ; then
    return
  fi
  DENUSERS=$1
  DENUSERS="$(echo "${DENUSERS}" | ${SED} 's/\"//g')"
  if [ ! -f "${ATALLOW}" ] ; then
     APLog "${ATALLOW:-NONEXISTENT} does not exist. FAILED"
     return
  fi
  IFS=','; for i in ${DENUSERS}; do
    if [ -z $(${GREP} -e "^\<${1}\>" "${ATALLOW}") ]; then
       APLog "The user ${1} should be allowed to use at and is not."
       WASFIXED=1
       if [ ${FIXATE} = 1 ] ; then
          APBackup "${ATALLOW}"
          echo ${i} >> "${ATALLOW}"
          APLog "FIXED"
       fi
    fi
  done
  if [  -z "$WASFIXED" ]; then
     if [ ${LOG_OK} = 1 ] ; then
        APLog "OK"
     fi
  fi
  IFS=""
}


CronAtPolicy_AtDeny_RH()
{
# I'm here!
  if [ ${TESTFLAG} = 1 ] ; then
    return
  fi
  DENUSERS=$1
  if [ ! -f "${ATDENY}" ] ; then
     APLog "${ATDENY:-NONEXISTENT} does not exist. FAILED"
     return
  fi
  DENUSERS="$(echo "${DENUSERS}" | ${SED} 's/\"//g')"
  IFS=','; for i in ${DENUSERS}; do
    if [ -z $(${GREP} -e "^\<${1}\>" "${ATDENY}") ]; then
       WASFIXED=1
       APLog "The user ${1} should not be allowed to use at and it is."
       if [ ${FIXATE} = 1 ] ; then
          APBackup "${ATDENY}"
          echo ${i} >> "${ATDENY}"
          APLog "FIXED"
       fi
    fi
  done
    if [  -z "$WASFIXED" ]; then
     if [ ${LOG_OK} = 1 ] ; then
        APLog "OK"
     fi
  fi
  IFS=""  
}

